[{"/Users/michaelwen/Documents/Trainning/project/moviepage/src/index.js":"1","/Users/michaelwen/Documents/Trainning/project/moviepage/src/App.js":"2","/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/header.js":"3","/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/Header.js":"4","/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/Button.js":"5","/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/FetchEverything.js":"6","/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/MovieContainer.js":"7","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/MoviesPage.js":"8","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/DetailsPage.js":"9","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/LoginPage.js":"10","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/RatedPage.js":"11","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/FavoritePage.js":"12","/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/UserContext.js":"13","/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/SessionIdContext.js":"14","/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/FavoriteContext.js":"15","/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/LoadingContext.js":"16"},{"size":755,"mtime":1612678013789,"results":"17","hashOfConfig":"18"},{"size":821,"mtime":1612392222029,"results":"19","hashOfConfig":"18"},{"size":1299,"mtime":1611721290085,"results":"20","hashOfConfig":"18"},{"size":2787,"mtime":1612672269481,"results":"21","hashOfConfig":"18"},{"size":267,"mtime":1612212509775,"results":"22","hashOfConfig":"18"},{"size":3407,"mtime":1612587118351,"results":"23","hashOfConfig":"18"},{"size":3069,"mtime":1612669973054,"results":"24","hashOfConfig":"18"},{"size":4001,"mtime":1612741689144,"results":"25","hashOfConfig":"18"},{"size":6369,"mtime":1612678617926,"results":"26","hashOfConfig":"18"},{"size":5451,"mtime":1612678752137,"results":"27","hashOfConfig":"18"},{"size":1769,"mtime":1612678344351,"results":"28","hashOfConfig":"18"},{"size":1892,"mtime":1612678533887,"results":"29","hashOfConfig":"18"},{"size":386,"mtime":1612648982631,"results":"30","hashOfConfig":"18"},{"size":425,"mtime":1612559376954,"results":"31","hashOfConfig":"18"},{"size":2107,"mtime":1612674223408,"results":"32","hashOfConfig":"18"},{"size":382,"mtime":1612678640221,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cl2iqt",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelwen/Documents/Trainning/project/moviepage/src/index.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/App.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/header.js",["70"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/Header.js",["71","72"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/Button.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/FetchEverything.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/components/MovieContainer.js",["73"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/MoviesPage.js",["74"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/DetailsPage.js",["75","76","77","78","79"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  fetchDetails,\n  fetchRatedMovie,\n  postRatedMovie,\n} from \"../components/FetchEverything\";\nimport { IoIosStar } from \"react-icons/io\";\nimport Button from \"../components/Button\";\nimport { UserContext } from \"../context/UserContext\";\nimport { SessionIdContext } from \"../context/SessionIdContext\";\nimport styled from \"styled-components\";\nimport { LoadingContext } from \"../context/LoadingContext\";\n\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nconst DetailsPage = (props) => {\n  const [details, setDetails] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [curRating, setCurRating] = useState(0);\n  const { user } = useContext(UserContext);\n  const { sessionId } = useContext(SessionIdContext);\n  const { isloading, setLoading } = useContext(LoadingContext);\n\n  const FetchDetails = async (id) => {\n    const data = await fetchDetails(id);\n    setDetails(data);\n    return data;\n  };\n\n  const handleRating = () => {\n    const ratingValue = curRating;\n    const ratingRequestBody = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        value: ratingValue,\n      }),\n    };\n    setRating(ratingValue);\n    postRatedMovie(details.id, sessionId, ratingRequestBody).then((resp) => {\n      // if rated success, what message will show\n    });\n  };\n\n  useEffect(() => {\n    const movieId = props.match.params.movieId;\n    setLoading(true);\n    FetchDetails(movieId).then(({ id }) => {\n      fetchRatedMovie(user.id, sessionId).then(({ results }) => {\n        setLoading(false);\n        results.find((movie) => {\n          if (movie.id === id) {\n            setRating(movie.rating);\n            return;\n          }\n        });\n      });\n    });\n  }, []);\n\n  return (\n    <div className={props.className}>\n      {isloading && <h2>Loading</h2>}\n      <div class=\"detail-img\">\n        <img src={`${IMAGE_URL}/${details.poster_path}`} />\n      </div>\n      <div class=\"detial-info\">\n        <div className=\"detail-title\">\n          <h2 className=\"title\">{details.title}</h2>\n          <br />\n        </div>\n        <div className=\"detail-data\">\n          <h3>Release Date:</h3>\n          <p class=\"release-date\">{details.release_date}</p>\n        </div>\n        <div className=\"detail-overview\">\n          <h3>Overview:</h3>\n          <p class=\"overview\">{details.overview}</p>\n        </div>\n        <div className=\"detail-genres\">\n          <h3>Genres:</h3>\n          <div class=\"genre-container\">\n            {details.genres ? (\n              details.genres.map((genre) => {\n                return <label class=\"genre-item\">{genre.name}</label>;\n              })\n            ) : (\n              <label> genres null</label>\n            )}\n          </div>\n        </div>\n        <div className=\"detail-rating\">\n          <h3>Average Rating:</h3>\n          <div className=\"rating-area\">\n            <IoIosStar className=\"star-icon\" />\n            <p>{details.vote_average}</p>\n          </div>\n        </div>\n        <div className=\"datail-your-rating\">\n          <h3>Your Rating:</h3>\n          {rating === undefined ? (\n            <p className=\"rating\">0</p>\n          ) : (\n            <p className=\"rating\">{rating} </p>\n          )}\n          <div className=\"your-rating-area\">\n            <select\n              className=\"your-rating\"\n              defaultValue=\"1\"\n              onChange={(e) => setCurRating(e.target.value)}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n            <Button className=\"rating-button\" onClick={handleRating}>\n              RATE IT!\n            </Button>\n          </div>\n        </div>\n        <div className=\"detail-company\">\n          <h3>Production companies:</h3>\n          <div class=\"company-container\">\n            {details.production_companies ? (\n              details.production_companies.map((company) => {\n                return (\n                  <div class=\"company\">\n                    <img\n                      className=\"company-image\"\n                      src={`${IMAGE_URL}/${company.logo_path}`}\n                    />\n                    <p>{company.name}</p>\n                  </div>\n                );\n              })\n            ) : (\n              <div>Company error</div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst StyledDetailsPage = styled(DetailsPage)`\n  display: flex;\n  flex-direction: row;\n  padding: 40px;\n  align-items: center;\n  margin-left: 128px;\n  margin-right: 128px;\n  justify-content: center;\n\n  .detail-title,\n  .detail-data,\n  .detail-overview,\n  .detail-genres,\n  .detail-rating,\n  .datail-your-rating,\n  .detail-company {\n    margin-top: 8px;\n    margin-bottom: 8px;\n  }\n\n  .detial-info h3 {\n    margin-bottom: 0.35em;\n  }\n\n  .detail-image {\n    width: 400px;\n    flex-basis: 50%;\n  }\n\n  .detial-info {\n    margin-left: 32px;\n  }\n\n  .title {\n    font-size: 3rem;\n  }\n\n  .overview {\n    max-height: 100px;\n    overflow-y: scroll;\n  }\n\n  .genre-item {\n    color: white;\n    height: 32px;\n    margin-right: 5px;\n    display: inline-flex;\n    padding: 10px;\n    box-sizing: border-box;\n    align-items: center;\n    border-radius: 16px;\n    vertical-align: middle;\n    justify-content: center;\n    text-decoration: none;\n    background-color: rgb(1, 180, 228);\n  }\n\n  .rating-area {\n    display: flex;\n  }\n\n  .star-icon {\n    color: rgb(245, 197, 24);\n    font-size: 20px;\n    margin-right: 3px;\n  }\n\n  .your-rating {\n    margin-right: 10px;\n    cursor: pointer;\n  }\n\n  .rating-button {\n    font-size: 15px;\n    padding: 5px 10px;\n  }\n\n  .company-container {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  .company {\n    margin-right: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .company-image {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport default StyledDetailsPage;\n","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/LoginPage.js",["80","81"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/RatedPage.js",["82"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { SessionIdContext } from \"../context/SessionIdContext\";\nimport MovieContainer from \"../components/MovieContainer\";\nimport styled from \"styled-components\";\nimport { fetchRatedMovie } from \"../components/FetchEverything\";\nimport { LoadingContext } from \"../context/LoadingContext\";\n// import { connect } from 'react-redux'\n\nexport const RatedPage = (props) => {\n  const { user } = useContext(UserContext);\n  const { sessionId } = useContext(SessionIdContext);\n  const [ratedList, setRatedList] = useState([]);\n  const { isloading, setLoading } = useContext(LoadingContext);\n\n  useEffect(() => {\n    if (user.name !== \"\") {\n      fetchRatedMovie(user.id, sessionId).then((data) => {\n        setLoading(true);\n        setRatedList(data.results);\n        setLoading(false);\n      });\n    }\n  }, []);\n\n  return (\n    <div className={props.className}>\n      {isloading && <h2>Loading</h2>}\n      <h2 className=\"title\">Rated Page</h2>\n      {user.name !== \"\" ? (\n        <div className=\"rated-page\">\n          {ratedList.map((movie) => {\n            return <MovieContainer key={movie.id} movie={movie} />;\n          })}\n        </div>\n      ) : (\n        <h2 className=\"title\">Please Login to See Your Rated Page</h2>\n      )}\n    </div>\n  );\n};\n\nconst StyledRatedPage = styled(RatedPage)`\n  .title {\n    margin-top: 32px;\n    text-align: center;\n    align-items: center;\n    font-size: 32px;\n  }\n\n  .rated-page {\n    display: grid;\n    gap: 32px;\n    grid-template-columns: repeat(4, 1fr);\n    margin: 0px 32px 32px 32px;\n  }\n`;\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\nexport default StyledRatedPage;\n","/Users/michaelwen/Documents/Trainning/project/moviepage/src/containers/FavoritePage.js",["83","84"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { SessionIdContext } from \"../context/SessionIdContext\";\nimport MovieContainer from \"../components/MovieContainer\";\nimport styled from \"styled-components\";\nimport { fetchFavoriteMovie } from \"../components/FetchEverything\";\nimport { FavoriteContext } from \"../context/FavoriteContext\";\nimport { LoadingContext } from \"../context/LoadingContext\";\n\n// import { connect } from 'react-redux'\n\nexport const FavoritePage = (props) => {\n  const { user } = useContext(UserContext);\n  const { sessionId } = useContext(SessionIdContext);\n  const { favoriteList, setFavoriteList } = useContext(FavoriteContext);\n  const { isloading, setLoading } = useContext(LoadingContext);\n\n  useEffect(() => {\n    if (user.name !== \"\") {\n      fetchFavoriteMovie(user.id, sessionId).then((data) => {\n        setLoading(true);\n        setFavoriteList(data.results);\n        setLoading(false);\n      });\n    }\n  }, []);\n\n  return (\n    <div className={props.className}>\n      {isloading && <h2>Loading</h2>}\n      <h2 className=\"title\">Favorite Page</h2>\n      {user.name !== \"\" ? (\n        <div className=\"favorite-page\">\n          {favoriteList.map((movie) => {\n            return <MovieContainer key={movie.id} movie={movie} />;\n          })}\n        </div>\n      ) : (\n        <h2 className=\"title\">Please Login to See Your Favorite Page</h2>\n      )}\n    </div>\n  );\n};\n\nconst StyledFavoritePage = styled(FavoritePage)`\n  .title {\n    margin-top: 32px;\n    text-align: center;\n    align-items: center;\n    font-size: 32px;\n  }\n\n  .favorite-page {\n    display: grid;\n    gap: 32px;\n    grid-template-columns: repeat(4, 1fr);\n    margin: 32px 32px 32px 32px;\n  }\n`;\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\nexport default StyledFavoritePage;\n","/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/UserContext.js",[],["85","86"],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/SessionIdContext.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/FavoriteContext.js",[],"/Users/michaelwen/Documents/Trainning/project/moviepage/src/context/LoadingContext.js",[],{"ruleId":"87","severity":1,"message":"88","line":9,"column":11,"nodeType":"89","endLine":12,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":25,"column":6,"nodeType":"92","endLine":25,"endColumn":12,"suggestions":"93"},{"ruleId":"87","severity":1,"message":"88","line":37,"column":11,"nodeType":"89","endLine":40,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":21,"column":9,"nodeType":"89","endLine":28,"endColumn":11},{"ruleId":"90","severity":1,"message":"94","line":55,"column":6,"nodeType":"92","endLine":55,"endColumn":22,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":51,"column":30,"nodeType":"98","messageId":"99","endLine":51,"endColumn":32},{"ruleId":"96","severity":1,"message":"100","line":54,"column":13,"nodeType":"101","messageId":"102","endLine":54,"endColumn":20},{"ruleId":"90","severity":1,"message":"103","line":59,"column":6,"nodeType":"92","endLine":59,"endColumn":8,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"88","line":65,"column":9,"nodeType":"89","endLine":65,"endColumn":60},{"ruleId":"87","severity":1,"message":"88","line":135,"column":21,"nodeType":"89","endLine":138,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"109","line":89,"column":6,"nodeType":"92","endLine":89,"endColumn":21,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"111","line":24,"column":6,"nodeType":"92","endLine":24,"endColumn":8,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"114","line":26,"column":6,"nodeType":"92","endLine":26,"endColumn":8,"suggestions":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["121"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.find() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'props.match.params.movieId', 'sessionId', 'setLoading', and 'user.id'. Either include them or remove the dependency array.",["122"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchSessionIdData', 'history', 'setFavoriteList', 'setLoading', 'setSessionId', 'setUser', and 'user'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'sessionId', 'setLoading', 'user.id', and 'user.name'. Either include them or remove the dependency array.",["124"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'sessionId', 'setFavoriteList', 'setLoading', 'user.id', and 'user.name'. Either include them or remove the dependency array.",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [onLoad, user]",{"range":"140","text":"141"},"Update the dependencies array to be: [category, page, setLoading]",{"range":"142","text":"143"},"Update the dependencies array to be: [props.match.params.movieId, sessionId, setLoading, user.id]",{"range":"144","text":"145"},"Update the dependencies array to be: [account.valid, fetchSessionIdData, history, setFavoriteList, setLoading, setSessionId, setUser, user]",{"range":"146","text":"147"},"Update the dependencies array to be: [sessionId, setLoading, user.id, user.name]",{"range":"148","text":"149"},"Update the dependencies array to be: [sessionId, setFavoriteList, setLoading, user.id, user.name]",{"range":"150","text":"151"},[827,833],"[onLoad, user]",[1488,1504],"[category, page, setLoading]",[1803,1805],"[props.match.params.movieId, sessionId, setLoading, user.id]",[2860,2875],"[account.valid, fetchSessionIdData, history, setFavoriteList, setLoading, setSessionId, setUser, user]",[916,918],"[sessionId, setLoading, user.id, user.name]",[1014,1016],"[sessionId, setFavoriteList, setLoading, user.id, user.name]"]